{"version":3,"file":"static/js/463.8b7709d8.chunk.js","mappings":"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","sources":["components/product/UpdateProductForm.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport axios from 'axios';\r\nimport { reset, changeId, changeName, changeDescription, changePrice, changeCurrentPrice, changeImage } from '../../redux/slides/UpdateableProductSlide';\r\n// import { RootState } from '../../redux/store';\r\n\r\nconst UpdateProductForm = (props) => {\r\n    const dispatch = useDispatch();\r\n    const { id, name, description, price, currentPrice, image } = useSelector((state) => state.updateableProduct);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchProduct = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:3001/products/${props.id}`);\r\n\r\n                if (response.status === 200) {\r\n                    dispatch(changeId(response.data.id));\r\n                    dispatch(changeName(response.data.name));\r\n                    dispatch(changeDescription(response.data.description));\r\n                    dispatch(changePrice(response.data.price));\r\n                    dispatch(changeCurrentPrice(response.data.currentPrice));\r\n                    dispatch(changeImage(response.data.image));\r\n                }\r\n            } catch (error) {\r\n                if (axios.isAxiosError(error) && error.response?.status === 404) {\r\n                    Swal.fire({\r\n                        title: 'Lỗi!',\r\n                        text: 'Không tìm thấy sản phẩm!',\r\n                        icon: 'error',\r\n                    }).then(() => {\r\n                        dispatch(reset());\r\n                        navigate('/hextech/products');\r\n                    });\r\n                }\r\n            }\r\n        };\r\n\r\n        fetchProduct();\r\n    }, [dispatch, props.id, navigate]);\r\n\r\n    const handleImageChange = (e) => {\r\n        const file = e.target.files[0];\r\n        const reader = new FileReader();\r\n\r\n        reader.onloadend = () => {\r\n            dispatch(changeImage(reader.result));\r\n        };\r\n\r\n        reader.readAsDataURL(file);\r\n    };\r\n\r\n    const isValidated = () => {\r\n        if (name.trim().length < 1) {\r\n            return 'Tên sản phẩm không được để trống!';\r\n        }\r\n\r\n        if (description.trim().length < 1) {\r\n            return 'Mô tả không được để trống!';\r\n        }\r\n\r\n        if (price <= 0) {\r\n            return 'Giá gốc phải lớn hơn 0!';\r\n        }\r\n\r\n        if (currentPrice <= 0) {\r\n            return 'Ưu đãi phải lớn hơn 0!';\r\n        }\r\n\r\n        if (currentPrice >= price) {\r\n            return 'Ưu đãi phải nhỏ hơn giá gốc!';\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const message = isValidated();\r\n\r\n        if (message.length > 0) {\r\n            Swal.fire({\r\n                title: 'Lỗi!',\r\n                text: message,\r\n                icon: 'error',\r\n            });\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.put(`http://localhost:3001/products/${id}`, {\r\n                name,\r\n                description,\r\n                price,\r\n                currentPrice,\r\n                image,\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                Swal.fire({\r\n                    title: 'Thành công!',\r\n                    text: 'Cập nhật sản phẩm thành công!',\r\n                    icon: 'success',\r\n                }).then(() => {\r\n                    dispatch(reset());\r\n                    navigate(`/hextech/detail-product/${id}`);\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating product:', error);\r\n            Swal.fire({\r\n                title: 'Lỗi!',\r\n                text: 'Có lỗi xảy ra khi cập nhật sản phẩm!',\r\n                icon: 'error',\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-5 shadow-lg py-5\">\r\n            <div className=\"mx-5\">\r\n                <h6 className=\"display-6 mb-4 text-center\">Cập nhật sản phẩm</h6>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6 col-md-8 col-sm-12 mx-auto\">\r\n                            <div className=\"mb-3\">\r\n                                <label htmlFor=\"input-name\" className=\"form-label\">\r\n                                    Tên sản phẩm\r\n                                </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"input-name\"\r\n                                    value={name}\r\n                                    autoComplete=\"off\"\r\n                                    onChange={(e) => dispatch(changeName(e.target.value.replace(/\\s/g, '')))}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label htmlFor=\"input-price\" className=\"form-label\">\r\n                                    Giá gốc\r\n                                </label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    id=\"input-price\"\r\n                                    value={price}\r\n                                    autoComplete=\"off\"\r\n                                    onChange={(e) => dispatch(changePrice(Number(e.target.value)))}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label htmlFor=\"input-currentPrice\" className=\"form-label\">\r\n                                    Ưu đãi\r\n                                </label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    id=\"input-currentPrice\"\r\n                                    value={currentPrice}\r\n                                    autoComplete=\"off\"\r\n                                    onChange={(e) => dispatch(changeCurrentPrice(Number(e.target.value)))}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label htmlFor=\"input-description\" className=\"form-label\">\r\n                                    Mô tả\r\n                                </label>\r\n                                <textarea\r\n                                    className=\"form-control\"\r\n                                    id=\"input-description\"\r\n                                    value={description}\r\n                                    autoComplete=\"off\"\r\n                                    onChange={(e) => dispatch(changeDescription(e.target.value.trim()))}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label htmlFor=\"input-image\" className=\"form-label\">\r\n                                    Hình ảnh\r\n                                </label>\r\n                                <input\r\n                                    type=\"file\"\r\n                                    className=\"form-control\"\r\n                                    id=\"input-image\"\r\n                                    accept=\"image/*\"\r\n                                    autoComplete=\"off\"\r\n                                    onChange={handleImageChange}\r\n                                    required\r\n                                />\r\n                                {image && <img src={image} alt=\"preview\" className=\"w-100 mt-3\" />}\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-center mt-4\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-secondary col-6\"\r\n                                    style={{ marginRight: '20px' }}\r\n                                    onClick={() => navigate(-1)}\r\n                                >\r\n                                    Quay lại\r\n                                </button>\r\n                                <button type=\"submit\" className=\"btn btn-primary col-6\">\r\n                                    Cập nhật sản phẩm\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UpdateProductForm;\r\n"],"names":["props","dispatch","useDispatch","id","name","description","price","currentPrice","image","useSelector","state","updateableProduct","navigate","useNavigate","useEffect","async","response","axios","get","status","changeId","data","changeName","changeDescription","changePrice","changeCurrentPrice","changeImage","error","_error$response","isAxiosError","Swal","title","text","icon","then","reset","fetchProduct","_jsx","className","children","_jsxs","onSubmit","e","preventDefault","message","trim","length","put","console","htmlFor","type","value","autoComplete","onChange","target","replace","required","Number","accept","file","files","reader","FileReader","onloadend","result","readAsDataURL","src","alt","style","marginRight","onClick"],"sourceRoot":""}